#pragma checksum "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "0bc2b6e7f9d0bf23bf8cf6aa6f01ac39319df997"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
namespace AspNetCore
{
    #line hidden
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#nullable restore
#line 1 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\_ViewImports.cshtml"
using BandFinder;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\_ViewImports.cshtml"
using BandFinder.Models;

#line default
#line hidden
#nullable disable
#nullable restore
#line 1 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml"
using System;

#line default
#line hidden
#nullable disable
#nullable restore
#line 2 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml"
using System.Diagnostics;

#line default
#line hidden
#nullable disable
#nullable restore
#line 3 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml"
using System.Threading;

#line default
#line hidden
#nullable disable
#nullable restore
#line 4 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml"
using System.Text.Json;

#line default
#line hidden
#nullable disable
#nullable restore
#line 5 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml"
using System.Text.Json.Serialization;

#line default
#line hidden
#nullable disable
#nullable restore
#line 6 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml"
using Newtonsoft.Json.Linq;

#line default
#line hidden
#nullable disable
#nullable restore
#line 7 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml"
using Newtonsoft.Json;

#line default
#line hidden
#nullable disable
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0bc2b6e7f9d0bf23bf8cf6aa6f01ac39319df997", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"0f41cbba57cce7ea030d100520bb666fbf719c3e", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<dynamic>
    {
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_0 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-controller", "Home", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_1 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "AllBands", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        private static readonly global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute __tagHelperAttribute_2 = new global::Microsoft.AspNetCore.Razor.TagHelpers.TagHelperAttribute("asp-action", "Events", global::Microsoft.AspNetCore.Razor.TagHelpers.HtmlAttributeValueStyle.DoubleQuotes);
        #line hidden
        #pragma warning disable 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperExecutionContext __tagHelperExecutionContext;
        #pragma warning restore 0649
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner __tagHelperRunner = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperRunner();
        #pragma warning disable 0169
        private string __tagHelperStringValueBuffer;
        #pragma warning restore 0169
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __backed__tagHelperScopeManager = null;
        private global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager __tagHelperScopeManager
        {
            get
            {
                if (__backed__tagHelperScopeManager == null)
                {
                    __backed__tagHelperScopeManager = new global::Microsoft.AspNetCore.Razor.Runtime.TagHelpers.TagHelperScopeManager(StartTagHelperWritingScope, EndTagHelperWritingScope);
                }
                return __backed__tagHelperScopeManager;
            }
        }
        private global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper;
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
            WriteLiteral("\r\n");
#nullable restore
#line 9 "C:\Users\benje\Desktop\Web\StarterCRUDFilmDbProject\CRUDFilmDbProject\Views\Home\Index.cshtml"
  
    ViewData["Title"] = "Home Page";
    ViewData["PageHeading"] = "Welcome";

#line default
#line hidden
#nullable disable
            WriteLiteral(@"
<ul id=""myData"" class=""grid grid-block col-xs-1 col-sm-2 col-md-2 col-lg-4 col-xl-5 ""> 
</ul>

<div class=""Welcome"">
    <h1>Band Finder</h1>
    <h2>Band Finder is an free online web service which allows you to bring the power of music back to your hands!</h2>
    <h2>From discovering local bands, venues and live shows you can book local bands for private events and venues. Discover new music from the cities you love.</h2>
</div>

<div class=""selection"">
    <div class=""Banner"">
        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0bc2b6e7f9d0bf23bf8cf6aa6f01ac39319df9976205", async() => {
                WriteLiteral("<h1>Band List</h1>");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_1.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_1);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral("\r\n    </div>\r\n\r\n    <div class=\"Banner2\">\r\n        ");
            __tagHelperExecutionContext = __tagHelperScopeManager.Begin("a", global::Microsoft.AspNetCore.Razor.TagHelpers.TagMode.StartTagAndEndTag, "0bc2b6e7f9d0bf23bf8cf6aa6f01ac39319df9977635", async() => {
                WriteLiteral("<h1>Events</h1>");
            }
            );
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper = CreateTagHelper<global::Microsoft.AspNetCore.Mvc.TagHelpers.AnchorTagHelper>();
            __tagHelperExecutionContext.Add(__Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Controller = (string)__tagHelperAttribute_0.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_0);
            __Microsoft_AspNetCore_Mvc_TagHelpers_AnchorTagHelper.Action = (string)__tagHelperAttribute_2.Value;
            __tagHelperExecutionContext.AddTagHelperAttribute(__tagHelperAttribute_2);
            await __tagHelperRunner.RunAsync(__tagHelperExecutionContext);
            if (!__tagHelperExecutionContext.Output.IsContentModified)
            {
                await __tagHelperExecutionContext.SetOutputContentAsync();
            }
            Write(__tagHelperExecutionContext.Output);
            __tagHelperExecutionContext = __tagHelperScopeManager.End();
            WriteLiteral(@"
    </div>
</div>

<script>

    let api = ""/Home/IndexApi"";
    var model = [];
    var usedRandom = [];
    var usedModel = [];
    var myData = document.getElementById(""myData"");

    (function () {
        // IIFE
        fetch(api)
            .then(response => response.json())
            .then(myJson => {

                var val = 0;
                var length = myJson.length;

                for (var x = 0; x < 10; x++) {
                    val = Math.floor(Math.random() * length);

                    while (usedRandom.includes(val)) {
                        val = Math.floor(Math.random() * length);
                    }

                    model.push(myJson[val]);

                    usedRandom.push(val);
                }

                for (var i = 0; i < model.length; i++) {
                    document.getElementById(""myData"").innerHTML +=
                        `<li id=""${i}"">
                    <a href=""Home/BandDetails/${model[i].BandID}"">
     ");
            WriteLiteral(@"                   <div class=""placeholder ratio-1:1"">
                            <img src=""/images/${model[i].BandImage}""
                                            srcset=""/images/${model[i].BandImageMobile} 1000w,
                                                        /images/${model[i].BandImage} 2000w""
                                            alt=""${model[i].BandTitle}"" />
                            <div class=""project-block-titles"">
                                <h3 class=""bandTitle"">${model[i].BandTitle}</h3>
                            </div>
                        </div>
                    </a>
                    </li>`
                }

                // use join with template literals to remove extra comma
            })
            .catch(() => console.log(""damn that Jason""));
    })()

    var countDownDate = new Date();
    myTimeSpan = 10000;
    countDownDate.setTime(countDownDate.getTime() + myTimeSpan)

    // Update the count down every 1 second
    var ");
            WriteLiteral(@"x = setInterval(function() {

        // Get today's date and time
        var now = new Date().getTime();

        // Find the distance between now and the count down date
        var distance = countDownDate - now;

        // Time calculations for days, hours, minutes and seconds
        var seconds = Math.floor((distance % (1000 * 60)) / 1000);

        // If the count down is over, write some text
        var val = 0;
        var val2 = 2;

        if (seconds <= 0)
        {
            countDownDate.setTime(countDownDate.getTime() + myTimeSpan)
            distance = countDownDate - now;
            let modelIndex = """";

            fetch(api)
                .then(response => response.json())
                .then(myJson => {

                    var length = myJson.length;


                    if (usedModel.length == model.length) // if all numbers have been used up
                    {
                        usedModel = []; // reset list
                    }

   ");
            WriteLiteral(@"                 if (usedRandom.length == length) // if all numbers have been used up
                    {
                        usedRandom = []; // reset list
                        for (var i = 0; i < model.length; i++) {
                            usedRandom.push(model[i].BandID); // add current list from model
                        }
                    }


                    val = Math.floor(Math.random() * model.length);

                    while (usedModel.includes(val))
                    {
                        val = Math.floor(Math.random() * model.length);
                    }

                    val2 = Math.floor(Math.random() * length);

                    while (usedRandom.includes(val2))
                    {
                        val2 = Math.floor(Math.random() * length);
                    }

                    usedModel.push(val);
                    usedRandom.push(val2);

                    document.getElementById(""myData"").innerHTML = ``

  ");
            WriteLiteral(@"                 
                    for (var i = 0; i < model.length; i++)
                    {
                        if (model[i] == model[val])
                        {
                            modelIndex = i;

                            document.getElementById(""myData"").innerHTML +=
                            `<li id=""${i}"" class=""animated fadeOut"">
                                <a href=""Home/BandDetails/${model[i].BandID}"">
                                    <div class=""placeholder ratio-1:1"">
                                        <img src=""/images/${model[i].BandImage}""
                                                        srcset=""/images/${model[i].BandImageMobile} 1000w,
                                                                    /images/${model[i].BandImage} 2000w""
                                                        alt=""${model[i].BandTitle}"" />
                                        <div class=""project-block-titles"">
                                    ");
            WriteLiteral(@"        <h3 class=""bandTitle"">${model[i].BandTitle}</h3>
                                        </div>
                                    </div>
                                </a>
                            </li>`

                            setTimeout(function ()
                            {
                                model.splice(val, 1, myJson[val2]);

                                document.getElementById(modelIndex.toString()).className = ""animated fadeIn"";
                                document.getElementById(modelIndex.toString()).innerHTML =
                                    `<a href=""Home/BandDetails/${model[modelIndex].BandID}"">
                                        <div class=""placeholder ratio-1:1"">
                                            <img src=""/images/${model[modelIndex].BandImage}""
                                                            srcset=""/images/${model[modelIndex].BandImageMobile} 1000w,
                                                      ");
            WriteLiteral(@"                  /images/${model[modelIndex].BandImage} 2000w""
                                                            alt=""${model[modelIndex].BandTitle}"" />
                                            <div class=""project-block-titles"">
                                                <h3 class=""bandTitle"">${model[modelIndex].BandTitle}</h3>
                                            </div>
                                        </div>
                                    </a>`

                            }, 5000); // wait 5 seconds

                            i++;
                        }

                        document.getElementById(""myData"").innerHTML +=
                            `<li id=""${i}"">
                            <a href=""Home/BandDetails/${model[i].BandID}"">
                                <div class=""placeholder ratio-1:1"">
                                    <img src=""/images/${model[i].BandImage}""
                                                    srcset=""/ima");
            WriteLiteral(@"ges/${model[i].BandImageMobile} 1000w,
                                                                /images/${model[i].BandImage} 2000w""
                                                    alt=""${model[i].BandTitle}"" />
                                    <div class=""project-block-titles"">
                                        <h3 class=""bandTitle"">${model[i].BandTitle}</h3>
                                    </div>
                                </div>
                            </a>
                            </li>`
                    }
                   
                });
        }
    }, 1000); // wait 10 seconds

</script>
");
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<dynamic> Html { get; private set; }
    }
}
#pragma warning restore 1591
